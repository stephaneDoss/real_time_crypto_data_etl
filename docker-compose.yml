version: "3"

services:
  zoo1:
    image: confluentinc/cp-zookeeper:7.3.2
    hostname: zoo1
    container_name: zoo1
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zoo1:2888:3888
    networks:
      - dbnetwork

  kafka1:
    image: confluentinc/cp-kafka:7.3.2
    depends_on:
      - zoo1
    hostname: kafka1
    container_name: kafka1
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka1:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092,DOCKER://host.docker.internal:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_JMX_PORT: 9999
      KAFKA_JMX_HOSTNAME: ${DOCKER_HOST_IP:-127.0.0.1}
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
    command:
      - bash
      - -c
      - |
        /etc/confluent/docker/run &
        sleep 30
        kafka-topics --create --topic CryptoData --bootstrap-server kafka1:19092 --partitions 1 --replication-factor 1 || true
        wait
    networks:
      - dbnetwork

  spark-master:
    image: bitnami/spark:latest
    container_name: spark-master
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
    expose:
      - "6066"
      - "7077"
    ports:
      - "8080:8080"
    networks:
      - dbnetwork

  spark-worker:
    image: bitnami/spark:latest
    container_name: spark-worker
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=2g
      - SPARK_WORKER_CORES=1
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
    depends_on:
      - spark-master
    networks:
      - dbnetwork
    volumes:
      - ./crypto_consumer.py:/opt/bitnami/spark/crypto_consumer.py

  spark-consumer:
    image: bitnami/spark:latest
    container_name: spark-consumer
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=2g
      - SPARK_WORKER_CORES=1
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - MONGODB_URI=mongodb+srv://user:1234@cluster0.1t3thtv.mongodb.net/?retryWrites=true&w=majority
      - KAFKA_BOOTSTRAP_SERVERS=kafka1:19092
    depends_on:
      - spark-master
    ports:
      - "4040:4040"
    networks:
      - dbnetwork
    volumes:
      - ./crypto_consumer.py:/opt/bitnami/spark/crypto_consumer.py
      - ./mongo-spark-connector_2.13-10.2.1-javadoc.jar:/docker-entrypoint-initdb.d/mongo-spark-connector_2.13-10.2.1-javadoc.jar
    command: /bin/bash -c "spark-submit --packages org.apache.spark:spark-sql-kafka-0-10_2.12:3.1.2,org.apache.kafka:kafka-clients:2.8.0,org.mongodb.spark:mongo-spark-connector_2.12:3.0.1 /opt/bitnami/spark/crypto_consumer.py"

  kafka_producer:
    build: ./Producer
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka1:19092
    volumes:
      - ./Producer:/app
    depends_on:
      - kafka1
    networks:
      - dbnetwork

  flask-app:
    build: ./apiFlask
    ports:
      - "5000:5000"
    network_mode: "host"
    depends_on:
      - spark-master
    # networks:
    #   - dbnetwork

networks:
  dbnetwork:
